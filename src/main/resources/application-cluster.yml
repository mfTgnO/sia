server:
  port: 8080

spring:
  datasource:
    url: jdbc:mysql://192.168.10.75:6603/bookinfo?useSSL=false&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&failOverReadOnly=false
    username: root
    password: mypassword
    hikari:
      maximum-pool-size: 50
      max-lifetime: 1770000
    initialization-mode: embedded
    tomcat:
      test-while-idle: true
      validation-query: SELECT 1
  rabbitmq:
    host: 192.168.10.75
    port: 5672
    username: guest
    password: guest
    requested-heartbeat: 10
    publisher-confirms: true
    publisher-returns: true
  redis:
    cluster:
      nodes: 192.168.10.75:7000,192.168.10.75:7001,192.168.10.75:7002,192.168.10.75:7003,192.168.10.75:7004,192.168.10.75:7005
      max-redirects: 3
    jedis:
      pool:
        max-active: 20
        max-idle: 100
        min-idle: 0
        max-wait: 1000ms
    timeout: 3000ms

  data:
    solr:
      host: http://192.168.10.75:8983/solr
#  jpa:
#    open-in-view: false
#  devtools:
#    add-properties: false
#  security:
#    user:
#      name: guest
#      password: guest123
#    show-sql: true
#    hibernate:
#      ddl-auto: validate
#      naming:
#        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
logging:
  #  path: E:logspath\logs\
  #  file: demo.log
  config: classpath:logback-spring.xml
#  path: logspath/logs
#    org:
#      springframework:
#        security: DEBUG

#greeting:
#  welcome: ${spring.application.name}
greeting:
  welcome: You are using ${spring.application.name}

taco:
  orders:
    pageSize: 10

mybatis:
  # 指定别名设置的包为所有entity
  type-aliases-package: com.example.demo.model
  mapper-locations: classpath:/mapper/*Mapper.xml
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

management:
  endpoints:
    web:
      exposure:
        include: "*"

# 配置分页插件
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

# rabbitmq消息队列
jsa:
rabbitmq:
    queue: javainuse.queue
    exchange: javainuse.exchange
    routingkey: javainuse.routingkey